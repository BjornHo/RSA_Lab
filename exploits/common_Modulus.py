import math

from RSA import extended_euclidean_v2

from gmpy2 import powmod, gmpy2


def common_Modulus_Attack(c_1, c_2, e_1, e_2, N):

    # gcd(c_1, c_2) = 1
    # e_1 * s_1 + e_2 * s_2 = 1
    gcd, s_1, s_2 = extended_euclidean_v2(e_1, e_2)

    # (c_1 ^ s_1) * (c_2 ^ s_2) = ((m^e_1)^s_1) * ((m^e_2)^s_2) = m^(e_1 * s_1 + e_2 * s_2) = m)
    gmpy2.get_context().precision=1024
    constructed_m = powmod(c_1, s_1, N) * powmod(c_2, s_2, N)

    # We can do this, they share the same modulus
    constructed_m = constructed_m % N
    return int(constructed_m)