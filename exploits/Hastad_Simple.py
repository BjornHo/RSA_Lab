from RSA import *
import gmpy2

# A simple broadcast attack in which all users have the same small exponent e
# The same message is encrypted to multiple users
# Now the attacker can retrieve the plaintext by using this attack

# For example for a small e, like e=3
# c_1 = m^3 mod N_1
# c_2 = m^3 mod N_2
# c_3 = m^3 mod N_3
# Use CRT to determine m^3 and then calculate cube root to determine m
def Hastad_BCA_Simple(list_c_i, list_n_i, e):

    # Assume gcd(N_i, N_j) not equal to 1, otherwise factorization is possible
    result = CRT(list_n_i, list_c_i)
    gmpy2.get_context().precision = 1024

    # e-th root of result
    return int(gmpy2.root(result, e))
